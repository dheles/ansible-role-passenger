---
- name: update packages or nah
  set_fact:
    package_state: "latest"
  when: passenger_update_packages
- set_fact:
    package_state: "present"
  when: not passenger_update_packages

- name: install epel repo - CentOS
  yum: name=epel-release state=present
  when: ansible_os_family == 'RedHat'
  become: true

- name: install prereqs
  package:
    name: "{{ item }}"
    state: "{{ package_state }}"
  with_items:
    - pygpgme
    - curl
    - httpd-devel
  become: true

  # NOTE: what should work:
- block:
  - name: add phusion's passenger repo - CentOS
    yum_repository:
      name: passenger
      description: "phusion passenger repo"
      baseurl: https://oss-binaries.phusionpassenger.com/yum/definitions/el-passenger.repo
      # gpgkey: https://oss-binaries.phusionpassenger.com/yum/definitions/RPM-GPG-KEY.asc
      gpgcheck: no
      enabled: yes
    when: ansible_os_family == 'RedHat'
    become: true

    # NOTE: failed attempt to resolve issue:
  # - name: update repo cache for the new repo
  #   command: yum -q makecache -y --disablerepo=* --enablerepo=passenger

  - name: install passenger + apache module
    yum:
      name: mod_passenger
      enablerepo: passenger
      state: "{{ package_state }}"
      disable_gpg_check: true
    notify: restart apache
    become: true

  when: ansible_likes_passenger_repo

  # NOTE: what does work:
  # NOTE: here "simply" is to be understood to mean, "in a manner as unsophisticated and un-ansible-idiomatic as possible"
- block:
  - name: simply add phusion passenger repo
    command: "curl --fail -sSLo /etc/yum.repos.d/passenger.repo https://oss-binaries.phusionpassenger.com/yum/definitions/el-passenger.repo"
    become: true

  - name: update yum
    command: "yum update -y"
    when: passenger_update_packages
    become: true

  - name: simply install passenger
    command: yum -y install mod_passenger
    notify: restart apache
    become: true

  when: not ansible_likes_passenger_repo

- name: flush handlers (e.g. restart apache) before running tests
  meta: flush_handlers

- name: validate passenger install
  command: "/usr/bin/passenger-config validate-install"
  register: validate_install_result
  changed_when: false

- name: test passenger validation
  assert:
    that:
      - "'installations... ✓' in validate_install_result.stdout"
      - "'PATH... ✓' in validate_install_result.stdout"
    msg: "installed passenger, but something is not ok: {{ validate_install_result.stdout }}"

- name: get passenger memory stats
  command: "/usr/sbin/passenger-memory-stats"
  register: passenger_memory_stats_result
  changed_when: false

- name: test for apache processes in memory stats
  assert:
    that: "'httpd' in passenger_memory_stats_result.stdout"
    msg:  "apache process not found in passenger memory stats: {{ passenger_memory_stats_result.stdout }}"

- name: test for passenger processes in memory stats
  assert:
    that: "'Passenger core' in passenger_memory_stats_result.stdout"
    msg:  "passenger core process not found in passenger memory stats: {{ passenger_memory_stats_result.stdout }}"
